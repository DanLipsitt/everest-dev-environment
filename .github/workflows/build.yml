name: "Test"

on:
  pull_request:
  push:

env:
  WORKSPACE: "workspace"
  CPM_SOURCE_CACHE: "cpm_source_cache"

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: devenv shell bash -- -e {0}
    steps:
    - uses: actions/checkout@v4
    - uses: nixbuild/nix-quick-install-action@v27
    - uses: cachix/cachix-action@v14
      with:
        name: devenv
    - uses: DeterminateSystems/magic-nix-cache-action@v4
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-count
    - name: Cache venv
      id: cache-venv
      uses: actions/cache@v4
      with:
        path: |
          ./.devenv/state/venv
        key:
          ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
    - name: Cache CPM Source
      id: cache-cpm
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.CPM_SOURCE_CACHE }}
        key:
          ${{ runner.os }}-cpm
    - name: Install devenv.sh
      run: nix profile install nixpkgs#devenv
      shell: bash

    - name: Cache workspace
      id: cache-workspace
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.WORKSPACE }}
        key:
          ${{ runner.os }}-workspace-${{ hashFiles('${workspace}/workspace-config.yaml') }}

    - name: Set up workspace
      run: |
        init-workspace
        init-deps

    - name: Run the build
      env:
        NCPU: ${{ steps.cpu-count.outputs.count }}
      run: build
